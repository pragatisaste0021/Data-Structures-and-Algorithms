class Solution {

    HashSet<List<Integer>> hashSet = new HashSet<>();

    public List<List<Integer>> findSubsequences(int[] nums) {
        
        List<Integer> arrList = new ArrayList<>();
        rec(arrList, 0, nums);
        List<List<Integer>> result = new ArrayList<>(hashSet);
        return result;
    }

    public void rec(List<Integer> arrList, int index, int[] nums){
        if(arrList.size() >= 2){
            hashSet.add(new ArrayList(arrList));
        }

        for(int i=index; i<nums.length; i++){
            if(arrList.isEmpty() || nums[i] >= arrList.get(arrList.size() - 1)){
                arrList.add(nums[i]);
                rec(arrList, i+1, nums);
                arrList.remove(arrList.size()-1);
            }
        }
    }
}