class Solution {
    public List<String> letterCombinations(String digits) {
        
        HashMap<Character, String> map = new HashMap<>();

        List<String> list = new ArrayList<>();

        int n = digits.length();

        if(n == 0){
            return list;
        }

        map.put('2', "abc");
        map.put('3', "def");
        map.put('4', "ghi");
        map.put('5', "jkl");
        map.put('6', "mno");
        map.put('7', "pqrs");
        map.put('8', "tuv");
        map.put('9', "wxyz");

        if(n == 1){
            String s =map.get(digits.charAt(0));
            for(int i=0; i<s.length(); i++){
                list.add(Character.toString(s.charAt(i)));
            }  
            return list;          
        }

        String str1 = map.get(digits.charAt(n-1));
        String str2 = map.get(digits.charAt(n-2));

        for(int i=0; i<str1.length(); i++){
            for(int j=0; j<str2.length(); j++){
                list.add(Character.toString(str2.charAt(j)) + Character.toString(str1.charAt(i)));
            }
        }

        for(int i=n-3; i>=0; i--){
            List<String> temp = new ArrayList<>(list);
            list.clear();
            String s = map.get(digits.charAt(i));
            for(int j=0; j<s.length(); j++){
                for(int k=0; k<temp.size(); k++){
                    list.add(s.charAt(j) + temp.get(k));
                }
            }
            temp.clear();
        }
        return list;
    }
}